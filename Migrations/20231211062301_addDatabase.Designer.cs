// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication_MusicShop.Models;

#nullable disable

namespace WebApplication_MusicShop.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231211062301_addDatabase")]
    partial class addDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication_MusicShop.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CartItem");
                });

            modelBuilder.Entity("WebApplication_MusicShop.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            Name = "Rock"
                        },
                        new
                        {
                            GenreId = 2,
                            Name = "Pop"
                        },
                        new
                        {
                            GenreId = 3,
                            Name = "Jazz"
                        },
                        new
                        {
                            GenreId = 4,
                            Name = "Metal"
                        },
                        new
                        {
                            GenreId = 5,
                            Name = "Rap"
                        },
                        new
                        {
                            GenreId = 6,
                            Name = "Country"
                        },
                        new
                        {
                            GenreId = 7,
                            Name = "Blues"
                        },
                        new
                        {
                            GenreId = 8,
                            Name = "Electronic"
                        },
                        new
                        {
                            GenreId = 9,
                            Name = "Folk"
                        },
                        new
                        {
                            GenreId = 10,
                            Name = "Classical"
                        },
                        new
                        {
                            GenreId = 11,
                            Name = "Reggae"
                        },
                        new
                        {
                            GenreId = 12,
                            Name = "Punk"
                        },
                        new
                        {
                            GenreId = 13,
                            Name = "Soul"
                        },
                        new
                        {
                            GenreId = 14,
                            Name = "Alternative"
                        });
                });

            modelBuilder.Entity("WebApplication_MusicShop.Models.Performer", b =>
                {
                    b.Property<int>("PerformerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PerformerId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PerformerId");

                    b.HasIndex("GenreId");

                    b.ToTable("Performers");

                    b.HasData(
                        new
                        {
                            PerformerId = 1,
                            GenreId = 1,
                            Name = "Adam Levine"
                        },
                        new
                        {
                            PerformerId = 2,
                            GenreId = 2,
                            Name = "Taylor Swift"
                        },
                        new
                        {
                            PerformerId = 3,
                            GenreId = 3,
                            Name = "Miles Davis"
                        },
                        new
                        {
                            PerformerId = 4,
                            GenreId = 4,
                            Name = "James Hetfield"
                        },
                        new
                        {
                            PerformerId = 5,
                            GenreId = 5,
                            Name = "Eminem"
                        },
                        new
                        {
                            PerformerId = 6,
                            GenreId = 6,
                            Name = "Dolly Parton"
                        },
                        new
                        {
                            PerformerId = 7,
                            GenreId = 7,
                            Name = "B.B. King"
                        },
                        new
                        {
                            PerformerId = 8,
                            GenreId = 8,
                            Name = "Calvin Harris"
                        },
                        new
                        {
                            PerformerId = 9,
                            GenreId = 9,
                            Name = "Bob Dylan"
                        },
                        new
                        {
                            PerformerId = 10,
                            GenreId = 10,
                            Name = "Ludwig van Beethoven"
                        },
                        new
                        {
                            PerformerId = 11,
                            GenreId = 11,
                            Name = "Bob Marley"
                        },
                        new
                        {
                            PerformerId = 12,
                            GenreId = 12,
                            Name = "Joey Ramone"
                        },
                        new
                        {
                            PerformerId = 13,
                            GenreId = 13,
                            Name = "Aretha Franklin"
                        },
                        new
                        {
                            PerformerId = 14,
                            GenreId = 14,
                            Name = "Kurt Cobain"
                        });
                });

            modelBuilder.Entity("WebApplication_MusicShop.Models.Song", b =>
                {
                    b.Property<int>("SongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SongId"));

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<int?>("PerformerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SongId");

                    b.HasIndex("GenreId");

                    b.HasIndex("PerformerId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            SongId = 1,
                            GenreId = 1,
                            PerformerId = 1,
                            Price = 1.99m,
                            Title = "Starlight"
                        },
                        new
                        {
                            SongId = 2,
                            GenreId = 2,
                            PerformerId = 2,
                            Price = 2.99m,
                            Title = "Shake It Off"
                        },
                        new
                        {
                            SongId = 3,
                            GenreId = 3,
                            PerformerId = 3,
                            Price = 1.49m,
                            Title = "Blue in Green"
                        },
                        new
                        {
                            SongId = 4,
                            GenreId = 4,
                            PerformerId = 4,
                            Price = 2.49m,
                            Title = "Enter Sandman"
                        },
                        new
                        {
                            SongId = 5,
                            GenreId = 5,
                            PerformerId = 5,
                            Price = 3.99m,
                            Title = "Lose Yourself"
                        },
                        new
                        {
                            SongId = 6,
                            GenreId = 6,
                            PerformerId = 6,
                            Price = 1.99m,
                            Title = "Jolene"
                        },
                        new
                        {
                            SongId = 7,
                            GenreId = 7,
                            PerformerId = 7,
                            Price = 2.99m,
                            Title = "The Thrill Is Gone"
                        },
                        new
                        {
                            SongId = 8,
                            GenreId = 8,
                            PerformerId = 8,
                            Price = 3.49m,
                            Title = "Summer"
                        },
                        new
                        {
                            SongId = 9,
                            GenreId = 9,
                            PerformerId = 9,
                            Price = 1.99m,
                            Title = "Blowin' in the Wind"
                        },
                        new
                        {
                            SongId = 10,
                            GenreId = 10,
                            PerformerId = 10,
                            Price = 4.99m,
                            Title = "Fifth Symphony"
                        },
                        new
                        {
                            SongId = 11,
                            GenreId = 11,
                            PerformerId = 11,
                            Price = 3.49m,
                            Title = "No Woman, No Cry"
                        },
                        new
                        {
                            SongId = 12,
                            GenreId = 12,
                            PerformerId = 12,
                            Price = 2.49m,
                            Title = "Blitzkrieg Bop"
                        },
                        new
                        {
                            SongId = 13,
                            GenreId = 13,
                            PerformerId = 13,
                            Price = 2.99m,
                            Title = "Respect"
                        },
                        new
                        {
                            SongId = 14,
                            GenreId = 14,
                            PerformerId = 14,
                            Price = 3.99m,
                            Title = "Smells Like Teen Spirit"
                        });
                });

            modelBuilder.Entity("WebApplication_MusicShop.Models.Performer", b =>
                {
                    b.HasOne("WebApplication_MusicShop.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("WebApplication_MusicShop.Models.Song", b =>
                {
                    b.HasOne("WebApplication_MusicShop.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId");

                    b.HasOne("WebApplication_MusicShop.Models.Performer", "Performer")
                        .WithMany()
                        .HasForeignKey("PerformerId");

                    b.Navigation("Genre");

                    b.Navigation("Performer");
                });
#pragma warning restore 612, 618
        }
    }
}
